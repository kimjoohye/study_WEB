/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-18 01:36:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.pcwk.board.BoardVO;
import java.util.List;
import com.pcwk.cmn.SearchVO;
import org.apache.log4j.Logger;

public final class board_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/com/common.jsp", Long.valueOf(1652679496347L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("com.pcwk.board.BoardVO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.pcwk.cmn.SearchVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");

   // Context Path
   String contPath = request.getContextPath(); 
   Logger LOG = Logger.getLogger(this.getClass());
   
   // Http 1.1에서 지원하는 헤더 : 웹브라우저가 응답결과를 캐시하지 않음
   response.setHeader("Cache-Control", "no-cache");

   // 웹 브라우저가 응답결과를 캐시하지 않음(앞/뒤로 가기 no-cache)
   response.setHeader("Cache-Control", "no-store");
   
   // Http 1.0에서 지원하는 헤더 : 웹브라우저가 응답결과를 캐시하지 않음
   response.setHeader("Pragma","no-cache");
   
   // Http 1.0에서 현재시간 이전으로 캐시하지 않음
   response.setHeader("Expires","1L");
   //out.println("웹브라우저가 응답결과를 캐시하지 않음");

      out.write("                                    \r\n");
      out.write("    \r\n");

   //param읽기
   SearchVO param = (SearchVO)request.getAttribute("param");
   out.println("param:"+param);
   
   //list
   List<BoardVO> list = (List<BoardVO>)request.getAttribute("list");
   if(null != list && list.size()>0){
      for(BoardVO vo:list){
         //out.println(vo);
      }
   }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.print(contPath );
      out.write("/favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--reset 스타일 시트 -->\r\n");
      out.write("<!-- link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(contPath );
      out.write("/asset/css/reset.css\" -->\r\n");
      out.write("<link rel=\"stylesheet\"  type=\"text/css\" href=\"");
      out.print(contPath );
      out.write("/asset/css/jquery-ui.css\">\r\n");
      out.write("<!--스타일 시트 -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- jquery -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(contPath );
      out.write("/asset/js/jquery-1.12.4.js\"></script>\r\n");
      out.write("<!-- jQuery UI -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(contPath );
      out.write("/asset/js/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- 스타일 시트 -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write("table {\r\n");
      out.write("    width: 600px;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("td, th {\r\n");
      out.write("    border-bottom: 1px solid lightgray;\r\n");
      out.write("    padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("th {\r\n");
      out.write("    background: gray;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txt_left {\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write(".txt_center {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txt_right {\r\n");
      out.write("  text-align: right;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <h2>게시 목록</h2>\r\n");
      out.write("	<hr/>\r\n");
      out.write("	<div>\r\n");
      out.write("	   <div>\r\n");
      out.write("	    <input type=\"button\" value=\"조회\" onclick=\"doRetrieve();\">\r\n");
      out.write("	    <input type=\"button\" value=\"등록\" id=\"moveToReg\">\r\n");
      out.write("	   </div>\r\n");
      out.write("	  <form action=\"");
      out.print(contPath );
      out.write("/board/board.do\" name=\"boardListFrm\" method=\"get\" id=\"boardListFrm\">\r\n");
      out.write("	    <input type=\"hidden\" name=\"work_div\" id=\"work_div\">\r\n");
      out.write("	    <input type=\"hidden\" name=\"seq\" id=\"seq\">\r\n");
      out.write("	    <div>\r\n");
      out.write("	      <label>구분</label>\r\n");
      out.write("	      <select name=\"searchDiv\" id=\"searchDiv\">\r\n");
      out.write("	       <option value=\"\" >전체</option>\r\n");
      out.write("	       <option value=\"10\" ");
 if(null != param && "10".equals(param.getSearchDiv())){out.print("selected");} 
      out.write(" >순번</option>\r\n");
      out.write("	       <option value=\"20\">제목</option>\r\n");
      out.write("	       <option value=\"30\">내용</option>\r\n");
      out.write("	       <option value=\"40\">제목+내용</option>\r\n");
      out.write("	      </select>\r\n");
      out.write("	      <input type=\"text\" name=\"searchWord\" id=\"searchWord\" size=\"15\"  value=\"");
 if(null != param) { out.print(param.getSearchWord()); } 
      out.write("\" >\r\n");
      out.write("	      <select name=\"pageSize\" id=\"pageSize\">\r\n");
      out.write("		      <option value=\"10\" ");
 if(null != param && 10 == param.getPageSize()){out.print("selected");} 
      out.write(">10</option>\r\n");
      out.write("	        <option value=\"20\" ");
 if(null != param && 20 == param.getPageSize()){out.print("selected");} 
      out.write(">20</option>\r\n");
      out.write("	        <option value=\"50\">50</option>\r\n");
      out.write("	        <option value=\"100\">100</option>     \r\n");
      out.write("	      </select>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<table id=\"listTable\">\r\n");
      out.write("	  <thead>\r\n");
      out.write("	    <tr>\r\n");
      out.write("	       <th width=\"80\">No.</th>\r\n");
      out.write("	       <th width=\"200\">제목</th>\r\n");
      out.write("	       <th width=\"80\">조회수</th>\r\n");
      out.write("	       <th width=\"100\">등록자</th>\r\n");
      out.write("	       <th width=\"80\">등록일</th>\r\n");
      out.write("	       <th width=\"80\" style=\"display: none;\">SEQ</th>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	  </thead>\r\n");
      out.write("	  <tbody>\r\n");
      out.write("	  ");

	  if(null!=list && list.size()>0){
	        for(BoardVO vo:list){
	           
	  
      out.write("\r\n");
      out.write("	    <tr>\r\n");
      out.write("	      <td class=\"txt_center\">");
      out.print(vo.getNo() );
      out.write("</td>\r\n");
      out.write("	      <td>");
      out.print(vo.getTitle() );
      out.write("</td>\r\n");
      out.write("	      <td class=\"txt_right\">");
      out.print(vo.getReadCnt() );
      out.write("</td>\r\n");
      out.write("	      <td>");
      out.print(vo.getModId() );
      out.write("</td>\r\n");
      out.write("	      <td class=\"txt_center\">");
      out.print(vo.getModDt() );
      out.write("</td>\r\n");
      out.write("	      <td style=\"display: none;\">");
      out.print(vo.getSeq() );
      out.write("</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    ");

	        }//for
	  }else{//if
	     
      out.write("\r\n");
      out.write("	     <tr>\r\n");
      out.write("	      <td colspan=\"99\">No data found</td>\r\n");
      out.write("	     </tr>\r\n");
      out.write("	     \r\n");
      out.write("	     ");

	     }
	    
	    
      out.write("\r\n");
      out.write("	  </tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("      \r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	  // event 감지\r\n");
      out.write("	  $('#listTable > tbody').on(\"click\", \"tr\", function(){\r\n");
      out.write("		  console.log('#listTable > tbody');\r\n");
      out.write("		  console.log('this : '+ $(this));\r\n");
      out.write("		  let pTr = $(this);\r\n");
      out.write("		  let tdArray = pTr.children();\r\n");
      out.write("		  // let seq = tdArray.eq(5).text();\r\n");
      out.write("		  \r\n");
      out.write("		  let seq = tdArray.last().text();\r\n");
      out.write("		  console.log('seq : ' + seq);\r\n");
      out.write("		  let frm = document.getElementById(\"boardListFrm\");\r\n");
      out.write("		  frm.seq.value = seq; // 게시판 PK\r\n");
      out.write("		  frm.work_div.value = 'doSelectOne';\r\n");
      out.write("		  \r\n");
      out.write("		  console.log('frm.seq.value : ' + frm.seq.value);\r\n");
      out.write("		  console.log('frm.work_div.value : ' + frm.work_div.value);\r\n");
      out.write("		  \r\n");
      out.write("		  // 서버전송\r\n");
      out.write("		  frm.submit();\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  function doRetrieve() {\r\n");
      out.write("	   //alert('doRetrieve()');\r\n");
      out.write("	   //javascript form submit()\r\n");
      out.write("	   // document.boardListFrm\r\n");
      out.write("	   let frm = document.getElementById(\"boardListFrm\");\r\n");
      out.write("	   frm.work_div.value='doRetrieve';\r\n");
      out.write("	   \r\n");
      out.write("	   console.log('frm.work_div.value: '+frm.work_div.value);\r\n");
      out.write("	   console.log('frm.searchDiv.value: '+frm.searchDiv.value);\r\n");
      out.write("	   console.log('frm.pageSize.value: '+frm.pageSize.value);\r\n");
      out.write("	   \r\n");
      out.write("	   // form submit()\r\n");
      out.write("	   frm.submit();\r\n");
      out.write("	}\r\n");
      out.write("	  \r\n");
      out.write("	  $('#moveToReg').on('click', function() {\r\n");
      out.write("		  console.log('moveToReg');\r\n");
      out.write("		  \r\n");
      out.write("		  let frm = document.boardListFrm;\r\n");
      out.write("		  frm.work_div.value='moveToReg';\r\n");
      out.write("		  console.log('frm.work_div.value : '+ frm.work_div.value);\r\n");
      out.write("		  \r\n");
      out.write("		  frm.submit();\r\n");
      out.write("	  }); \r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
